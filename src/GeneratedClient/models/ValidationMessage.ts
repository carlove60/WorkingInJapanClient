/* tslint:disable */
/* eslint-disable */
/**
 * WaitingList
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MessageType } from './MessageType';
import {
    MessageTypeFromJSON,
    MessageTypeFromJSONTyped,
    MessageTypeToJSON,
    MessageTypeToJSONTyped,
} from './MessageType';

/**
 * 
 * @export
 * @interface ValidationMessage
 */
export interface ValidationMessage {
    /**
     * 
     * @type {string}
     * @memberof ValidationMessage
     */
    message: string;
    /**
     * 
     * @type {MessageType}
     * @memberof ValidationMessage
     */
    type: MessageType;
}



/**
 * Check if a given object implements the ValidationMessage interface.
 */
export function instanceOfValidationMessage(value: object): value is ValidationMessage {
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function ValidationMessageFromJSON(json: any): ValidationMessage {
    return ValidationMessageFromJSONTyped(json, false);
}

export function ValidationMessageFromJSONTyped(json: any, ignoreDiscriminator: boolean): ValidationMessage {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'],
        'type': MessageTypeFromJSON(json['type']),
    };
}

export function ValidationMessageToJSON(json: any): ValidationMessage {
    return ValidationMessageToJSONTyped(json, false);
}

export function ValidationMessageToJSONTyped(value?: ValidationMessage | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'message': value['message'],
        'type': MessageTypeToJSON(value['type']),
    };
}


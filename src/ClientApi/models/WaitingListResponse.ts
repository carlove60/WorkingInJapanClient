/* tslint:disable */
/* eslint-disable */
/**
 * WaitingList.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ValidationMessage } from './ValidationMessage';
import {
    ValidationMessageFromJSON,
    ValidationMessageFromJSONTyped,
    ValidationMessageToJSON,
    ValidationMessageToJSONTyped,
} from './ValidationMessage';
import type { WaitingListDto } from './WaitingListDto';
import {
    WaitingListDtoFromJSON,
    WaitingListDtoFromJSONTyped,
    WaitingListDtoToJSON,
    WaitingListDtoToJSONTyped,
} from './WaitingListDto';

/**
 * 
 * @export
 * @interface WaitingListResponse
 */
export interface WaitingListResponse {
    /**
     * 
     * @type {Array<ValidationMessage>}
     * @memberof WaitingListResponse
     */
    messages: Array<ValidationMessage>;
    /**
     * 
     * @type {WaitingListDto}
     * @memberof WaitingListResponse
     */
    waitingList?: WaitingListDto;
}

/**
 * Check if a given object implements the WaitingListResponse interface.
 */
export function instanceOfWaitingListResponse(value: object): value is WaitingListResponse {
    if (!('messages' in value) || value['messages'] === undefined) return false;
    return true;
}

export function WaitingListResponseFromJSON(json: any): WaitingListResponse {
    return WaitingListResponseFromJSONTyped(json, false);
}

export function WaitingListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WaitingListResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'messages': ((json['messages'] as Array<any>).map(ValidationMessageFromJSON)),
        'waitingList': json['waitingList'] == null ? undefined : WaitingListDtoFromJSON(json['waitingList']),
    };
}

export function WaitingListResponseToJSON(json: any): WaitingListResponse {
    return WaitingListResponseToJSONTyped(json, false);
}

export function WaitingListResponseToJSONTyped(value?: WaitingListResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'messages': ((value['messages'] as Array<any>).map(ValidationMessageToJSON)),
        'waitingList': WaitingListDtoToJSON(value['waitingList']),
    };
}


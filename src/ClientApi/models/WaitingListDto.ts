/* tslint:disable */
/* eslint-disable */
/**
 * WaitingListComponent.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
import type { PartyDto } from "./PartyDto";
import { PartyDtoFromJSON, PartyDtoFromJSONTyped, PartyDtoToJSON, PartyDtoToJSONTyped } from "./PartyDto";

/**
 *
 * @export
 * @interface WaitingListDto
 */
export interface WaitingListDto {
  /**
   *
   * @type {string}
   * @memberof WaitingListDto
   */
  name: string;
  /**
   *
   * @type {string}
   * @memberof WaitingListDto
   */
  id?: string;
  /**
   *
   * @type {number}
   * @memberof WaitingListDto
   */
  totalSeats?: number;
  /**
   *
   * @type {PartyDto}
   * @memberof WaitingListDto
   */
  addedParty?: PartyDto;
  /**
   *
   * @type {number}
   * @memberof WaitingListDto
   */
  seatsAvailable: number;
  /**
   *
   * @type {Array<PartyDto>}
   * @memberof WaitingListDto
   */
  parties?: Array<PartyDto>;
}

/**
 * Check if a given object implements the WaitingListDto interface.
 */
export function instanceOfWaitingListDto(value: object): value is WaitingListDto {
  if (!("name" in value) || value["name"] === undefined) return false;
  if (!("seatsAvailable" in value) || value["seatsAvailable"] === undefined) return false;
  return true;
}

export function WaitingListDtoFromJSON(json: any): WaitingListDto {
  return WaitingListDtoFromJSONTyped(json, false);
}

export function WaitingListDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): WaitingListDto {
  if (json == null) {
    return json;
  }
  return {
    name: json["name"],
    id: json["id"] == null ? undefined : json["id"],
    totalSeats: json["totalSeats"] == null ? undefined : json["totalSeats"],
    addedParty: json["addedParty"] == null ? undefined : PartyDtoFromJSON(json["addedParty"]),
    seatsAvailable: json["seatsAvailable"],
    parties: json["parties"] == null ? undefined : (json["parties"] as Array<any>).map(PartyDtoFromJSON),
  };
}

export function WaitingListDtoToJSON(json: any): WaitingListDto {
  return WaitingListDtoToJSONTyped(json, false);
}

export function WaitingListDtoToJSONTyped(value?: WaitingListDto | null, ignoreDiscriminator: boolean = false): any {
  if (value == null) {
    return value;
  }

  return {
    name: value["name"],
    id: value["id"],
    totalSeats: value["totalSeats"],
    addedParty: PartyDtoToJSON(value["addedParty"]),
    seatsAvailable: value["seatsAvailable"],
    parties: value["parties"] == null ? undefined : (value["parties"] as Array<any>).map(PartyDtoToJSON),
  };
}

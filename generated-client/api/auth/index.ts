/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createStringResultObjectFromDiscriminatorValue, serializeStringResultObject, serializeUserRegistrationModel, type StringResultObject, type UserRegistrationModel } from '../../models/index.js';
// @ts-ignore
import { CheckSessionRequestBuilderRequestsMetadata, type CheckSessionRequestBuilder } from './checkSession/index.js';
// @ts-ignore
import { LoginRequestBuilderRequestsMetadata, type LoginRequestBuilder } from './login/index.js';
// @ts-ignore
import { RegisterRequestBuilderRequestsMetadata, type RegisterRequestBuilder } from './register/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/Auth
 */
export interface AuthRequestBuilder extends BaseRequestBuilder<AuthRequestBuilder> {
    /**
     * The checkSession property
     */
    get checkSession(): CheckSessionRequestBuilder;
    /**
     * The login property
     */
    get login(): LoginRequestBuilder;
    /**
     * The register property
     */
    get register(): RegisterRequestBuilder;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<StringResultObject>}
     */
     post(body: UserRegistrationModel, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<StringResultObject | undefined>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: UserRegistrationModel, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
/**
 * Uri template for the request builder.
 */
export const AuthRequestBuilderUriTemplate = "{+baseurl}/api/Auth";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const AuthRequestBuilderNavigationMetadata: Record<Exclude<keyof AuthRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    checkSession: {
        requestsMetadata: CheckSessionRequestBuilderRequestsMetadata,
    },
    login: {
        requestsMetadata: LoginRequestBuilderRequestsMetadata,
    },
    register: {
        requestsMetadata: RegisterRequestBuilderRequestsMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const AuthRequestBuilderRequestsMetadata: RequestsMetadata = {
    post: {
        uriTemplate: AuthRequestBuilderUriTemplate,
        responseBodyContentType: "application/json, text/plain;q=0.9",
        adapterMethodName: "send",
        responseBodyFactory:  createStringResultObjectFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeUserRegistrationModel,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */

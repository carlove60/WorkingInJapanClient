/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { type Guid, type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';

export interface ActionResult extends Parsable {
}
export interface AddressModel extends Parsable {
    /**
     * The city property
     */
    city?: string | null;
    /**
     * The country property
     */
    country?: string | null;
    /**
     * The id property
     */
    id?: Guid | null;
    /**
     * The state property
     */
    state?: string | null;
    /**
     * The street property
     */
    street?: string | null;
    /**
     * The zipCode property
     */
    zipCode?: string | null;
}
export interface BooleanActionResult extends Parsable {
    /**
     * The result property
     */
    result?: ActionResult | null;
    /**
     * The value property
     */
    value?: boolean | null;
}
export interface BooleanResultObject extends Parsable {
    /**
     * The httpErrorCode property
     */
    httpErrorCode?: number | null;
    /**
     * The httpErrorMessage property
     */
    httpErrorMessage?: string | null;
    /**
     * The isError property
     */
    isError?: boolean | null;
    /**
     * The records property
     */
    records?: BooleanActionResult[] | null;
    /**
     * The systemMessages property
     */
    systemMessages?: string[] | null;
    /**
     * The userMessages property
     */
    userMessages?: ValidationMessage[] | null;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ActionResult}
 */
// @ts-ignore
export function createActionResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoActionResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {AddressModel}
 */
// @ts-ignore
export function createAddressModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoAddressModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BooleanActionResult}
 */
// @ts-ignore
export function createBooleanActionResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBooleanActionResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {BooleanResultObject}
 */
// @ts-ignore
export function createBooleanResultObjectFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoBooleanResultObject;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IActionResultActionResult}
 */
// @ts-ignore
export function createIActionResultActionResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIActionResultActionResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IActionResult}
 */
// @ts-ignore
export function createIActionResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIActionResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IActionResultResultObject}
 */
// @ts-ignore
export function createIActionResultResultObjectFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIActionResultResultObject;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {IdentityUser}
 */
// @ts-ignore
export function createIdentityUserFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoIdentityUser;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {LoginModel}
 */
// @ts-ignore
export function createLoginModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoLoginModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {RegistrationModel}
 */
// @ts-ignore
export function createRegistrationModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoRegistrationModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ResumeModel}
 */
// @ts-ignore
export function createResumeModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoResumeModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserModelActionResult}
 */
// @ts-ignore
export function createUserModelActionResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserModelActionResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserModel}
 */
// @ts-ignore
export function createUserModelFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserModel;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {UserModelResultObject}
 */
// @ts-ignore
export function createUserModelResultObjectFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoUserModelResultObject;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ValidationMessageActionResult}
 */
// @ts-ignore
export function createValidationMessageActionResultFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoValidationMessageActionResult;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ValidationMessage}
 */
// @ts-ignore
export function createValidationMessageFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoValidationMessage;
}
/**
 * Creates a new instance of the appropriate class based on discriminator value
 * @param parseNode The parse node to use to read the discriminator value and create the object
 * @returns {ValidationMessageResultObject}
 */
// @ts-ignore
export function createValidationMessageResultObjectFromDiscriminatorValue(parseNode: ParseNode | undefined) : ((instance?: Parsable) => Record<string, (node: ParseNode) => void>) {
    return deserializeIntoValidationMessageResultObject;
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoActionResult(actionResult: Partial<ActionResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoAddressModel(addressModel: Partial<AddressModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "city": n => { addressModel.city = n.getStringValue(); },
        "country": n => { addressModel.country = n.getStringValue(); },
        "id": n => { addressModel.id = n.getGuidValue(); },
        "state": n => { addressModel.state = n.getStringValue(); },
        "street": n => { addressModel.street = n.getStringValue(); },
        "zipCode": n => { addressModel.zipCode = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBooleanActionResult(booleanActionResult: Partial<BooleanActionResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "result": n => { booleanActionResult.result = n.getObjectValue<ActionResult>(createActionResultFromDiscriminatorValue); },
        "value": n => { booleanActionResult.value = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoBooleanResultObject(booleanResultObject: Partial<BooleanResultObject> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "httpErrorCode": n => { booleanResultObject.httpErrorCode = n.getNumberValue(); },
        "httpErrorMessage": n => { booleanResultObject.httpErrorMessage = n.getStringValue(); },
        "isError": n => { booleanResultObject.isError = n.getBooleanValue(); },
        "records": n => { booleanResultObject.records = n.getCollectionOfObjectValues<BooleanActionResult>(createBooleanActionResultFromDiscriminatorValue); },
        "systemMessages": n => { booleanResultObject.systemMessages = n.getCollectionOfPrimitiveValues<string>(); },
        "userMessages": n => { booleanResultObject.userMessages = n.getCollectionOfObjectValues<ValidationMessage>(createValidationMessageFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIActionResult(iActionResult: Partial<IActionResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIActionResultActionResult(iActionResultActionResult: Partial<IActionResultActionResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "result": n => { iActionResultActionResult.result = n.getObjectValue<ActionResult>(createActionResultFromDiscriminatorValue); },
        "value": n => { iActionResultActionResult.value = n.getObjectValue<IActionResult>(createIActionResultFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIActionResultResultObject(iActionResultResultObject: Partial<IActionResultResultObject> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "httpErrorCode": n => { iActionResultResultObject.httpErrorCode = n.getNumberValue(); },
        "httpErrorMessage": n => { iActionResultResultObject.httpErrorMessage = n.getStringValue(); },
        "isError": n => { iActionResultResultObject.isError = n.getBooleanValue(); },
        "records": n => { iActionResultResultObject.records = n.getCollectionOfObjectValues<IActionResultActionResult>(createIActionResultActionResultFromDiscriminatorValue); },
        "systemMessages": n => { iActionResultResultObject.systemMessages = n.getCollectionOfPrimitiveValues<string>(); },
        "userMessages": n => { iActionResultResultObject.userMessages = n.getCollectionOfObjectValues<ValidationMessage>(createValidationMessageFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoIdentityUser(identityUser: Partial<IdentityUser> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "accessFailedCount": n => { identityUser.accessFailedCount = n.getNumberValue(); },
        "concurrencyStamp": n => { identityUser.concurrencyStamp = n.getStringValue(); },
        "email": n => { identityUser.email = n.getStringValue(); },
        "emailConfirmed": n => { identityUser.emailConfirmed = n.getBooleanValue(); },
        "id": n => { identityUser.id = n.getStringValue(); },
        "lockoutEnabled": n => { identityUser.lockoutEnabled = n.getBooleanValue(); },
        "lockoutEnd": n => { identityUser.lockoutEnd = n.getDateValue(); },
        "normalizedEmail": n => { identityUser.normalizedEmail = n.getStringValue(); },
        "normalizedUserName": n => { identityUser.normalizedUserName = n.getStringValue(); },
        "passwordHash": n => { identityUser.passwordHash = n.getStringValue(); },
        "phoneNumber": n => { identityUser.phoneNumber = n.getStringValue(); },
        "phoneNumberConfirmed": n => { identityUser.phoneNumberConfirmed = n.getBooleanValue(); },
        "securityStamp": n => { identityUser.securityStamp = n.getStringValue(); },
        "twoFactorEnabled": n => { identityUser.twoFactorEnabled = n.getBooleanValue(); },
        "userName": n => { identityUser.userName = n.getStringValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoLoginModel(loginModel: Partial<LoginModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "email": n => { loginModel.email = n.getStringValue(); },
        "password": n => { loginModel.password = n.getStringValue(); },
        "remember": n => { loginModel.remember = n.getBooleanValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoRegistrationModel(registrationModel: Partial<RegistrationModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "confirmEmail": n => { registrationModel.confirmEmail = n.getStringValue(); },
        "confirmPassword": n => { registrationModel.confirmPassword = n.getStringValue(); },
        "email": n => { registrationModel.email = n.getStringValue(); },
        "password": n => { registrationModel.password = n.getStringValue(); },
        "type": n => { registrationModel.type = n.getEnumValue<RegistrationType>(RegistrationTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoResumeModel(resumeModel: Partial<ResumeModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "content": n => { resumeModel.content = n.getStringValue(); },
        "id": n => { resumeModel.id = n.getGuidValue(); },
        "title": n => { resumeModel.title = n.getStringValue(); },
        "user": n => { resumeModel.user = n.getObjectValue<UserModel>(createUserModelFromDiscriminatorValue); },
        "userId": n => { resumeModel.userId = n.getGuidValue(); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserModel(userModel: Partial<UserModel> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "address": n => { userModel.address = n.getObjectValue<AddressModel>(createAddressModelFromDiscriminatorValue); },
        "dateOfBirth": n => { userModel.dateOfBirth = n.getDateValue(); },
        "email": n => { userModel.email = n.getStringValue(); },
        "englishLevel": n => { userModel.englishLevel = n.getEnumValue<LanguageLevel>(LanguageLevelObject); },
        "firstName": n => { userModel.firstName = n.getStringValue(); },
        "id": n => { userModel.id = n.getGuidValue(); },
        "identityUser": n => { userModel.identityUser = n.getObjectValue<IdentityUser>(createIdentityUserFromDiscriminatorValue); },
        "identityUserId": n => { userModel.identityUserId = n.getStringValue(); },
        "isLoggedIn": n => { userModel.isLoggedIn = n.getBooleanValue(); },
        "japaneseLevel": n => { userModel.japaneseLevel = n.getEnumValue<LanguageLevel>(LanguageLevelObject); },
        "jlpt": n => { userModel.jlpt = n.getEnumValue<JLPT>(JLPTObject); },
        "language": n => { userModel.language = n.getEnumValue<Language>(LanguageObject); },
        "lastName": n => { userModel.lastName = n.getStringValue(); },
        "nationality": n => { userModel.nationality = n.getStringValue(); },
        "phoneNumber": n => { userModel.phoneNumber = n.getStringValue(); },
        "profilePicture": n => { userModel.profilePicture = n.getStringValue(); },
        "resume": n => { userModel.resume = n.getObjectValue<ResumeModel>(createResumeModelFromDiscriminatorValue); },
        "role": n => { userModel.role = n.getStringValue(); },
        "visaStatus": n => { userModel.visaStatus = n.getEnumValue<VisaStatus>(VisaStatusObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserModelActionResult(userModelActionResult: Partial<UserModelActionResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "result": n => { userModelActionResult.result = n.getObjectValue<ActionResult>(createActionResultFromDiscriminatorValue); },
        "value": n => { userModelActionResult.value = n.getObjectValue<UserModel>(createUserModelFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoUserModelResultObject(userModelResultObject: Partial<UserModelResultObject> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "httpErrorCode": n => { userModelResultObject.httpErrorCode = n.getNumberValue(); },
        "httpErrorMessage": n => { userModelResultObject.httpErrorMessage = n.getStringValue(); },
        "isError": n => { userModelResultObject.isError = n.getBooleanValue(); },
        "records": n => { userModelResultObject.records = n.getCollectionOfObjectValues<UserModelActionResult>(createUserModelActionResultFromDiscriminatorValue); },
        "systemMessages": n => { userModelResultObject.systemMessages = n.getCollectionOfPrimitiveValues<string>(); },
        "userMessages": n => { userModelResultObject.userMessages = n.getCollectionOfObjectValues<ValidationMessage>(createValidationMessageFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoValidationMessage(validationMessage: Partial<ValidationMessage> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "messageEnglish": n => { validationMessage.messageEnglish = n.getStringValue(); },
        "messageJapanese": n => { validationMessage.messageJapanese = n.getStringValue(); },
        "type": n => { validationMessage.type = n.getEnumValue<MessageType>(MessageTypeObject); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoValidationMessageActionResult(validationMessageActionResult: Partial<ValidationMessageActionResult> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "result": n => { validationMessageActionResult.result = n.getObjectValue<ActionResult>(createActionResultFromDiscriminatorValue); },
        "value": n => { validationMessageActionResult.value = n.getObjectValue<ValidationMessage>(createValidationMessageFromDiscriminatorValue); },
    }
}
/**
 * The deserialization information for the current model
 * @returns {Record<string, (node: ParseNode) => void>}
 */
// @ts-ignore
export function deserializeIntoValidationMessageResultObject(validationMessageResultObject: Partial<ValidationMessageResultObject> | undefined = {}) : Record<string, (node: ParseNode) => void> {
    return {
        "httpErrorCode": n => { validationMessageResultObject.httpErrorCode = n.getNumberValue(); },
        "httpErrorMessage": n => { validationMessageResultObject.httpErrorMessage = n.getStringValue(); },
        "isError": n => { validationMessageResultObject.isError = n.getBooleanValue(); },
        "records": n => { validationMessageResultObject.records = n.getCollectionOfObjectValues<ValidationMessageActionResult>(createValidationMessageActionResultFromDiscriminatorValue); },
        "systemMessages": n => { validationMessageResultObject.systemMessages = n.getCollectionOfPrimitiveValues<string>(); },
        "userMessages": n => { validationMessageResultObject.userMessages = n.getCollectionOfObjectValues<ValidationMessage>(createValidationMessageFromDiscriminatorValue); },
    }
}
export interface IActionResult extends Parsable {
}
export interface IActionResultActionResult extends Parsable {
    /**
     * The result property
     */
    result?: ActionResult | null;
    /**
     * The value property
     */
    value?: IActionResult | null;
}
export interface IActionResultResultObject extends Parsable {
    /**
     * The httpErrorCode property
     */
    httpErrorCode?: number | null;
    /**
     * The httpErrorMessage property
     */
    httpErrorMessage?: string | null;
    /**
     * The isError property
     */
    isError?: boolean | null;
    /**
     * The records property
     */
    records?: IActionResultActionResult[] | null;
    /**
     * The systemMessages property
     */
    systemMessages?: string[] | null;
    /**
     * The userMessages property
     */
    userMessages?: ValidationMessage[] | null;
}
export interface IdentityUser extends Parsable {
    /**
     * The accessFailedCount property
     */
    accessFailedCount?: number | null;
    /**
     * The concurrencyStamp property
     */
    concurrencyStamp?: string | null;
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The emailConfirmed property
     */
    emailConfirmed?: boolean | null;
    /**
     * The id property
     */
    id?: string | null;
    /**
     * The lockoutEnabled property
     */
    lockoutEnabled?: boolean | null;
    /**
     * The lockoutEnd property
     */
    lockoutEnd?: Date | null;
    /**
     * The normalizedEmail property
     */
    normalizedEmail?: string | null;
    /**
     * The normalizedUserName property
     */
    normalizedUserName?: string | null;
    /**
     * The passwordHash property
     */
    passwordHash?: string | null;
    /**
     * The phoneNumber property
     */
    phoneNumber?: string | null;
    /**
     * The phoneNumberConfirmed property
     */
    phoneNumberConfirmed?: boolean | null;
    /**
     * The securityStamp property
     */
    securityStamp?: string | null;
    /**
     * The twoFactorEnabled property
     */
    twoFactorEnabled?: boolean | null;
    /**
     * The userName property
     */
    userName?: string | null;
}
export type JLPT = (typeof JLPTObject)[keyof typeof JLPTObject];
export type Language = (typeof LanguageObject)[keyof typeof LanguageObject];
export type LanguageLevel = (typeof LanguageLevelObject)[keyof typeof LanguageLevelObject];
export interface LoginModel extends Parsable {
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The password property
     */
    password?: string | null;
    /**
     * The remember property
     */
    remember?: boolean | null;
}
export type MessageType = (typeof MessageTypeObject)[keyof typeof MessageTypeObject];
export interface RegistrationModel extends Parsable {
    /**
     * The confirmEmail property
     */
    confirmEmail?: string | null;
    /**
     * The confirmPassword property
     */
    confirmPassword?: string | null;
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The password property
     */
    password?: string | null;
    /**
     * The type property
     */
    type?: RegistrationType | null;
}
export type RegistrationType = (typeof RegistrationTypeObject)[keyof typeof RegistrationTypeObject];
export interface ResumeModel extends Parsable {
    /**
     * The content property
     */
    content?: string | null;
    /**
     * The id property
     */
    id?: Guid | null;
    /**
     * The title property
     */
    title?: string | null;
    /**
     * The user property
     */
    user?: UserModel | null;
    /**
     * The userId property
     */
    userId?: Guid | null;
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeActionResult(writer: SerializationWriter, actionResult: Partial<ActionResult> | undefined | null = {}) : void {
    if (actionResult) {
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeAddressModel(writer: SerializationWriter, addressModel: Partial<AddressModel> | undefined | null = {}) : void {
    if (addressModel) {
        writer.writeStringValue("city", addressModel.city);
        writer.writeStringValue("country", addressModel.country);
        writer.writeGuidValue("id", addressModel.id);
        writer.writeStringValue("state", addressModel.state);
        writer.writeStringValue("street", addressModel.street);
        writer.writeStringValue("zipCode", addressModel.zipCode);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBooleanActionResult(writer: SerializationWriter, booleanActionResult: Partial<BooleanActionResult> | undefined | null = {}) : void {
    if (booleanActionResult) {
        writer.writeObjectValue<ActionResult>("result", booleanActionResult.result, serializeActionResult);
        writer.writeBooleanValue("value", booleanActionResult.value);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeBooleanResultObject(writer: SerializationWriter, booleanResultObject: Partial<BooleanResultObject> | undefined | null = {}) : void {
    if (booleanResultObject) {
        writer.writeNumberValue("httpErrorCode", booleanResultObject.httpErrorCode);
        writer.writeStringValue("httpErrorMessage", booleanResultObject.httpErrorMessage);
        writer.writeBooleanValue("isError", booleanResultObject.isError);
        writer.writeCollectionOfObjectValues<BooleanActionResult>("records", booleanResultObject.records, serializeBooleanActionResult);
        writer.writeCollectionOfPrimitiveValues<string>("systemMessages", booleanResultObject.systemMessages);
        writer.writeCollectionOfObjectValues<ValidationMessage>("userMessages", booleanResultObject.userMessages, serializeValidationMessage);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIActionResult(writer: SerializationWriter, iActionResult: Partial<IActionResult> | undefined | null = {}) : void {
    if (iActionResult) {
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIActionResultActionResult(writer: SerializationWriter, iActionResultActionResult: Partial<IActionResultActionResult> | undefined | null = {}) : void {
    if (iActionResultActionResult) {
        writer.writeObjectValue<ActionResult>("result", iActionResultActionResult.result, serializeActionResult);
        writer.writeObjectValue<IActionResult>("value", iActionResultActionResult.value, serializeIActionResult);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIActionResultResultObject(writer: SerializationWriter, iActionResultResultObject: Partial<IActionResultResultObject> | undefined | null = {}) : void {
    if (iActionResultResultObject) {
        writer.writeNumberValue("httpErrorCode", iActionResultResultObject.httpErrorCode);
        writer.writeStringValue("httpErrorMessage", iActionResultResultObject.httpErrorMessage);
        writer.writeBooleanValue("isError", iActionResultResultObject.isError);
        writer.writeCollectionOfObjectValues<IActionResultActionResult>("records", iActionResultResultObject.records, serializeIActionResultActionResult);
        writer.writeCollectionOfPrimitiveValues<string>("systemMessages", iActionResultResultObject.systemMessages);
        writer.writeCollectionOfObjectValues<ValidationMessage>("userMessages", iActionResultResultObject.userMessages, serializeValidationMessage);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeIdentityUser(writer: SerializationWriter, identityUser: Partial<IdentityUser> | undefined | null = {}) : void {
    if (identityUser) {
        writer.writeNumberValue("accessFailedCount", identityUser.accessFailedCount);
        writer.writeStringValue("concurrencyStamp", identityUser.concurrencyStamp);
        writer.writeStringValue("email", identityUser.email);
        writer.writeBooleanValue("emailConfirmed", identityUser.emailConfirmed);
        writer.writeStringValue("id", identityUser.id);
        writer.writeBooleanValue("lockoutEnabled", identityUser.lockoutEnabled);
        writer.writeDateValue("lockoutEnd", identityUser.lockoutEnd);
        writer.writeStringValue("normalizedEmail", identityUser.normalizedEmail);
        writer.writeStringValue("normalizedUserName", identityUser.normalizedUserName);
        writer.writeStringValue("passwordHash", identityUser.passwordHash);
        writer.writeStringValue("phoneNumber", identityUser.phoneNumber);
        writer.writeBooleanValue("phoneNumberConfirmed", identityUser.phoneNumberConfirmed);
        writer.writeStringValue("securityStamp", identityUser.securityStamp);
        writer.writeBooleanValue("twoFactorEnabled", identityUser.twoFactorEnabled);
        writer.writeStringValue("userName", identityUser.userName);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeLoginModel(writer: SerializationWriter, loginModel: Partial<LoginModel> | undefined | null = {}) : void {
    if (loginModel) {
        writer.writeStringValue("email", loginModel.email);
        writer.writeStringValue("password", loginModel.password);
        writer.writeBooleanValue("remember", loginModel.remember);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeRegistrationModel(writer: SerializationWriter, registrationModel: Partial<RegistrationModel> | undefined | null = {}) : void {
    if (registrationModel) {
        writer.writeStringValue("confirmEmail", registrationModel.confirmEmail);
        writer.writeStringValue("confirmPassword", registrationModel.confirmPassword);
        writer.writeStringValue("email", registrationModel.email);
        writer.writeStringValue("password", registrationModel.password);
        writer.writeEnumValue<RegistrationType>("type", registrationModel.type);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeResumeModel(writer: SerializationWriter, resumeModel: Partial<ResumeModel> | undefined | null = {}) : void {
    if (resumeModel) {
        writer.writeStringValue("content", resumeModel.content);
        writer.writeGuidValue("id", resumeModel.id);
        writer.writeStringValue("title", resumeModel.title);
        writer.writeObjectValue<UserModel>("user", resumeModel.user, serializeUserModel);
        writer.writeGuidValue("userId", resumeModel.userId);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserModel(writer: SerializationWriter, userModel: Partial<UserModel> | undefined | null = {}) : void {
    if (userModel) {
        writer.writeObjectValue<AddressModel>("address", userModel.address, serializeAddressModel);
        writer.writeDateValue("dateOfBirth", userModel.dateOfBirth);
        writer.writeStringValue("email", userModel.email);
        writer.writeEnumValue<LanguageLevel>("englishLevel", userModel.englishLevel);
        writer.writeStringValue("firstName", userModel.firstName);
        writer.writeGuidValue("id", userModel.id);
        writer.writeObjectValue<IdentityUser>("identityUser", userModel.identityUser, serializeIdentityUser);
        writer.writeStringValue("identityUserId", userModel.identityUserId);
        writer.writeBooleanValue("isLoggedIn", userModel.isLoggedIn);
        writer.writeEnumValue<LanguageLevel>("japaneseLevel", userModel.japaneseLevel);
        writer.writeEnumValue<JLPT>("jlpt", userModel.jlpt);
        writer.writeEnumValue<Language>("language", userModel.language);
        writer.writeStringValue("lastName", userModel.lastName);
        writer.writeStringValue("nationality", userModel.nationality);
        writer.writeStringValue("phoneNumber", userModel.phoneNumber);
        writer.writeStringValue("profilePicture", userModel.profilePicture);
        writer.writeObjectValue<ResumeModel>("resume", userModel.resume, serializeResumeModel);
        writer.writeStringValue("role", userModel.role);
        writer.writeEnumValue<VisaStatus>("visaStatus", userModel.visaStatus);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserModelActionResult(writer: SerializationWriter, userModelActionResult: Partial<UserModelActionResult> | undefined | null = {}) : void {
    if (userModelActionResult) {
        writer.writeObjectValue<ActionResult>("result", userModelActionResult.result, serializeActionResult);
        writer.writeObjectValue<UserModel>("value", userModelActionResult.value, serializeUserModel);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeUserModelResultObject(writer: SerializationWriter, userModelResultObject: Partial<UserModelResultObject> | undefined | null = {}) : void {
    if (userModelResultObject) {
        writer.writeNumberValue("httpErrorCode", userModelResultObject.httpErrorCode);
        writer.writeStringValue("httpErrorMessage", userModelResultObject.httpErrorMessage);
        writer.writeBooleanValue("isError", userModelResultObject.isError);
        writer.writeCollectionOfObjectValues<UserModelActionResult>("records", userModelResultObject.records, serializeUserModelActionResult);
        writer.writeCollectionOfPrimitiveValues<string>("systemMessages", userModelResultObject.systemMessages);
        writer.writeCollectionOfObjectValues<ValidationMessage>("userMessages", userModelResultObject.userMessages, serializeValidationMessage);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeValidationMessage(writer: SerializationWriter, validationMessage: Partial<ValidationMessage> | undefined | null = {}) : void {
    if (validationMessage) {
        writer.writeStringValue("messageEnglish", validationMessage.messageEnglish);
        writer.writeStringValue("messageJapanese", validationMessage.messageJapanese);
        writer.writeEnumValue<MessageType>("type", validationMessage.type);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeValidationMessageActionResult(writer: SerializationWriter, validationMessageActionResult: Partial<ValidationMessageActionResult> | undefined | null = {}) : void {
    if (validationMessageActionResult) {
        writer.writeObjectValue<ActionResult>("result", validationMessageActionResult.result, serializeActionResult);
        writer.writeObjectValue<ValidationMessage>("value", validationMessageActionResult.value, serializeValidationMessage);
    }
}
/**
 * Serializes information the current object
 * @param writer Serialization writer to use to serialize this model
 */
// @ts-ignore
export function serializeValidationMessageResultObject(writer: SerializationWriter, validationMessageResultObject: Partial<ValidationMessageResultObject> | undefined | null = {}) : void {
    if (validationMessageResultObject) {
        writer.writeNumberValue("httpErrorCode", validationMessageResultObject.httpErrorCode);
        writer.writeStringValue("httpErrorMessage", validationMessageResultObject.httpErrorMessage);
        writer.writeBooleanValue("isError", validationMessageResultObject.isError);
        writer.writeCollectionOfObjectValues<ValidationMessageActionResult>("records", validationMessageResultObject.records, serializeValidationMessageActionResult);
        writer.writeCollectionOfPrimitiveValues<string>("systemMessages", validationMessageResultObject.systemMessages);
        writer.writeCollectionOfObjectValues<ValidationMessage>("userMessages", validationMessageResultObject.userMessages, serializeValidationMessage);
    }
}
export interface UserModel extends Parsable {
    /**
     * The address property
     */
    address?: AddressModel | null;
    /**
     * The dateOfBirth property
     */
    dateOfBirth?: Date | null;
    /**
     * The email property
     */
    email?: string | null;
    /**
     * The englishLevel property
     */
    englishLevel?: LanguageLevel | null;
    /**
     * The firstName property
     */
    firstName?: string | null;
    /**
     * The id property
     */
    id?: Guid | null;
    /**
     * The identityUser property
     */
    identityUser?: IdentityUser | null;
    /**
     * The identityUserId property
     */
    identityUserId?: string | null;
    /**
     * The isLoggedIn property
     */
    isLoggedIn?: boolean | null;
    /**
     * The japaneseLevel property
     */
    japaneseLevel?: LanguageLevel | null;
    /**
     * The jlpt property
     */
    jlpt?: JLPT | null;
    /**
     * The language property
     */
    language?: Language | null;
    /**
     * The lastName property
     */
    lastName?: string | null;
    /**
     * The nationality property
     */
    nationality?: string | null;
    /**
     * The phoneNumber property
     */
    phoneNumber?: string | null;
    /**
     * The profilePicture property
     */
    profilePicture?: string | null;
    /**
     * The resume property
     */
    resume?: ResumeModel | null;
    /**
     * The role property
     */
    role?: string | null;
    /**
     * The visaStatus property
     */
    visaStatus?: VisaStatus | null;
}
export interface UserModelActionResult extends Parsable {
    /**
     * The result property
     */
    result?: ActionResult | null;
    /**
     * The value property
     */
    value?: UserModel | null;
}
export interface UserModelResultObject extends Parsable {
    /**
     * The httpErrorCode property
     */
    httpErrorCode?: number | null;
    /**
     * The httpErrorMessage property
     */
    httpErrorMessage?: string | null;
    /**
     * The isError property
     */
    isError?: boolean | null;
    /**
     * The records property
     */
    records?: UserModelActionResult[] | null;
    /**
     * The systemMessages property
     */
    systemMessages?: string[] | null;
    /**
     * The userMessages property
     */
    userMessages?: ValidationMessage[] | null;
}
export interface ValidationMessage extends Parsable {
    /**
     * The messageEnglish property
     */
    messageEnglish?: string | null;
    /**
     * The messageJapanese property
     */
    messageJapanese?: string | null;
    /**
     * The type property
     */
    type?: MessageType | null;
}
export interface ValidationMessageActionResult extends Parsable {
    /**
     * The result property
     */
    result?: ActionResult | null;
    /**
     * The value property
     */
    value?: ValidationMessage | null;
}
export interface ValidationMessageResultObject extends Parsable {
    /**
     * The httpErrorCode property
     */
    httpErrorCode?: number | null;
    /**
     * The httpErrorMessage property
     */
    httpErrorMessage?: string | null;
    /**
     * The isError property
     */
    isError?: boolean | null;
    /**
     * The records property
     */
    records?: ValidationMessageActionResult[] | null;
    /**
     * The systemMessages property
     */
    systemMessages?: string[] | null;
    /**
     * The userMessages property
     */
    userMessages?: ValidationMessage[] | null;
}
export type VisaStatus = (typeof VisaStatusObject)[keyof typeof VisaStatusObject];
export const JLPTObject = {
    N5: "N5",
    N4: "N4",
    N3: "N3",
    N2: "N2",
    N1: "N1",
    None: "None",
} as const;
export const LanguageLevelObject = {
    None: "None",
    Some: "Some",
    Conversational: "Conversational",
    Business: "Business",
    Fluent: "Fluent",
    Native: "Native",
} as const;
export const LanguageObject = {
    Japanese: "Japanese",
    English: "English",
} as const;
export const MessageTypeObject = {
    Success: "success",
    Info: "info",
    Warning: "warning",
    ErrorEscaped: "error",
} as const;
export const RegistrationTypeObject = {
    User: "User",
    Company: "Company",
} as const;
export const VisaStatusObject = {
    Working: "Working",
    HighlySkilled: "HighlySkilled",
    IntraCompanyTransfee: "IntraCompanyTransfee",
    Student: "Student",
    WorkingHoliday: "WorkingHoliday",
    Spouse: "Spouse",
    NoVisa: "NoVisa",
} as const;
/* tslint:enable */
/* eslint-enable */
